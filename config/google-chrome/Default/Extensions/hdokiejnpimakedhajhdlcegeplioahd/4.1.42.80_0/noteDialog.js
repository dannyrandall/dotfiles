var NoteDialog=function(t){DialogWithGroupInput.call(this,t,{closeButtonEnabled:!0,maximizeButtonEnabled:!0}),this.removedAttachments=null,this.addedAttachments=null,this.showAttachmentContainer=function(t){t?$("#noteDialogExistingAttachments").hide():$("#noteDialogExistingAttachments").show()},this.noteForms={},this.noteFormElement=null,this.noteTypeIconContainer=null,this.noteTypeOptions=[],this.temporaryNoteTypeOptionValue=null};NoteDialog.prototype=Object.create(DialogWithGroupInput.prototype),NoteDialog.prototype.constructor=NoteDialog,function(t){var e=function(){LPProxy.copyToClipboard(this.getValue())};NoteDialog.prototype.setNoteTypeImage=function(t){this.noteTypeIconContainer.children(".itemIcon").detach(),this.noteTypeIconContainer.prepend(this.inputFields.notetype.options[t].icon)};var n=function(t){var e=LPTools.createElement("li","noteDropdown",t.label);return e.insertBefore(o(t.value),e.firstChild),e},o=function(t){var e=new NoteDisplay(new Note({notetype:t})),n=e.buildItemIconElement();return e.destruct(),n};NoteDialog.prototype.addCustomNote=function(t){var n="Custom_"+t.id;if(!this.noteForms.hasOwnProperty(n)){this.addNoteType({label:t.title,value:n});for(var o=[],i=0;i<t.fields.length;++i){var a=t.fields[i].text;switch(t.fields[i].type){case"text":o.push(new DialogInput.TextInput(a));break;case"password":o.push(new DialogInput.PasswordInput(a));break;case"textarea":o.push(new DialogInput.TextArea(a));break;case"monthDayYear":o.push(new DialogInput.AlphaDateInput(a));break;case"monthYear":o.push(new DialogInput.AlphaDateInput(a,{includeDay:!1}));break;case"textWithCopy":o.push(new DialogInput.TextInput(a,void 0,{inputButton:Strings.translateString("Copy"),inputButtonHandler:e}))}}var u=new p(o);u.customTemplate=JSON.stringify(t),this.noteForms[n]=u}return n},NoteDialog.prototype.open=function(t){DialogWithGroupInput.prototype.open.call(this,$.extend(t,{title:t&&t.vaultItem?Strings.translateString("Edit Note"):Strings.translateString("Add Note"),sourceFunction:LPProxy.getNoteModel}))},NoteDialog.prototype.defaultFields=function(t){t.defaultData=$.extend({notetype:t.vaultItem?t.vaultItem.getNoteType():Note.prototype.NOTE_TYPES.GENERIC},t.defaultData),DialogWithGroupInput.prototype.defaultFields.apply(this,arguments)},NoteDialog.prototype.clearFields=function(t){DialogWithGroupInput.prototype.clearFields.apply(this,arguments);for(var e in this.noteForms)this.noteForms[e].inputs.clear()},NoteDialog.prototype.clearErrors=function(){DialogWithGroupInput.prototype.clearErrors.apply(this,arguments);for(var t in this.noteForms)this.noteForms[t].inputs.clearErrors()},NoteDialog.prototype.validate=function(t){var e=DialogWithGroupInput.prototype.validate.apply(this,arguments);return""===t.name&&(this.addError("name","Name is required."),e=!1),JSON.stringify(t.extra).length>45e3&&(!function(e){dialogs.confirmation.open({title:Strings.translateString("Error"),text:Strings.translateString("The notes field contains too much data. You may store a maximum of 45,000 characters per note. Would you like us to truncate the note for you? You will lose some of your data."),handler:function(){e.inputFields.extra.Notes.setValue(t.extra.Notes.substring(0,45e3))}})}(this),e=!1),e},NoteDialog.prototype.initializeAttachmentContainer=function(t){this.containers.attachments=new Container(t,{stateChangeCallback:this.showAttachmentContainer}),this.containers.attachments.initialize(document.getElementById("attachmentContainer")),this.showAttachmentContainer(this.containers.attachments.isEmpty())},NoteDialog.prototype.setup=function(t,e){var n=e.vaultItem;if(n?(this.inputFields.notetype.disable(),$("#deleteCustomNoteTemplate").hide()):this.inputFields.notetype.enable(),n&&!this.inputFields.notetype.options.hasOwnProperty(n.getNoteType())&&n.getTemplate()&&(this.temporaryNoteTypeOptionValue=n.getNoteType(),this.addCustomNote(JSON.parse(n.getTemplate()))),n&&n.hasAttachments()){for(var o=n.getAttachments(),i=[],a=0,p=o.length;a<p;++a)i.push(o[a].newDisplayObject());this.initializeAttachmentContainer(i)}else this.showAttachmentContainer(!0);this.removedAttachments=[],this.addedAttachments=[],this.vaultItem?(t.find(".history").show(),bg.loglogin(this.vaultItem.getID())):t.find(".history").hide(),DialogWithGroupInput.prototype.setup.apply(this,arguments)},NoteDialog.prototype.addNoteType=function(){var t=function(t,e){return t.label<e.label?-1:t.label>e.label?1:0},e=LPTools.createElement("div",{id:"addCustomTemplate"},Strings.translateString("Add Custom Template"));return $(e).bind("click",function(){dialogs.customNoteTemplate.open()}),function(i){i.element=n(i),i.icon=o(i.value),this.noteTypeOptions.push(i),this.noteTypeOptions=this.noteTypeOptions.sort(t),this.inputFields.notetype.setOptions(this.noteTypeOptions),this.inputFields.notetype.dropdownElement.append(e)}}(),NoteDialog.prototype.initialize=function(e){DialogWithGroupInput.prototype.initialize.apply(this,arguments),this.noteFormElement=t.getElementById("noteForm"),this.noteTypeIconContainer=$("#noteDialogTypeContainer"),this.inputFields.notetype=new DropdownInput(this.inputFields.notetype.getElement()[0]);for(var n in Note.prototype.NOTE_TYPES){var o=Note.prototype.NOTE_TYPES[n];this.addNoteType({label:o,value:o})}!function(t){var e=function(){for(var e=LPProxy.getCustomNoteTemplates(),n=0,o=e.length;n<o;++n)t.addCustomNote(e[n])};e(),Topics.get(Topics.REFRESH_DATA).subscribe(e),t.noteTypeIconContainer.bind("mousedown",function(e){t.inputFields.notetype.toggle(e),e.preventDefault(),t.inputFields.notetype.focus()}),t.inputFields.notetype.getElement().bind("focus",function(){t.noteTypeIconContainer.addClass("focus")}),t.inputFields.notetype.getElement().bind("blur",function(){t.noteTypeIconContainer.removeClass("focus")});var n=t.addFavButton(),o=LPTools.createElement("a",{class:"itemButton history",title:Strings.translateString("Note History")});$(o).bind("click",function(){LPRequest.makeRequest(LPProxy.getNoteHistory,{parameters:[t.vaultItem.getID(),t.vaultItem.getShareID()],success:function(e){dialogs.fieldHistory.open({history:e,vaultItem:t.vaultItem,type:Constants.HISTORY_TYPES.NOTE})},requestSuccessOptions:{closeDialog:!1}})}),n.appendChild(o),t.inputFields.notetype.onChange(function(e){t.setNoteFields(e);var n=t.noteForms[e];t.hiddenFields.template=n?n.customTemplate:"",n&&n.customTemplate&&!t.inputFields.notetype.disabled?$("#deleteCustomNoteTemplate").show():$("#deleteCustomNoteTemplate").hide()}),Topics.get(Topics.ATTACHMENT_REMOVED).subscribe(function(e){for(var n=0,o=t.addedAttachments.length;n<o;++n)if(t.addedAttachments[n]===e)return void t.addedAttachments.splice(n,1);t.removedAttachments.push(e)}),$("#addAttachmentButton").bind("click",function(){LPProxy.addAttachment(function(e){t.addAttachment(e)})}),$("#deleteCustomNoteTemplate").bind("click",function(){dialogs.confirmation.open({title:Strings.translateString("Confirm Deletion"),text:Strings.translateString("Are you sure you want do delete? <br/> Any notes you created using this template will not be deleted."),nextButtonText:Strings.translateString("Continue"),backButtonText:Strings.translateString(Strings.Vault.CANCEL),handler:function(){var e=t.inputFields.notetype.getValue(),n=JSON.parse(t.noteForms[e].customTemplate);LPRequest.makeRequest(LPProxy.deleteCustomNoteTemplate,{params:{id:n.id},success:function(){t.inputFields.notetype.removeValue(e,Note.prototype.NOTE_TYPES.GENERIC),delete t.noteForms[e]},requestSuccessOptions:{closeDialog:!1}})}})}),Topics.get(Topics.SECURENOTE_TEMPLATE_ADDED).subscribe(function(e){var n=t.addCustomNote(e);t.inputFields.notetype.setValue(n)})}(this),this.noteForms[Note.prototype.NOTE_TYPES.BANK]=new p([new DialogInput.TextInput("Bank Name"),new DialogInput.TextInput("Account Type"),new DialogInput.TextInput("Routing Number"),new DialogInput.TextInput("Account Number"),new DialogInput.TextInput("SWIFT Code"),new DialogInput.TextInput("IBAN Number"),new DialogInput.TextInput("Pin"),new DialogInput.TextInput("Branch Address"),new DialogInput.TextInput("Branch Phone"),new DialogInput.TextArea("Notes")]),this.noteForms[Note.prototype.NOTE_TYPES.DATABASE]=new p([new DialogInput.TextInput("Type"),new DialogInput.TextInput("Hostname"),new DialogInput.TextInput("Port"),new DialogInput.TextInput("Database"),new DialogInput.TextInput("Username"),new DialogInput.PasswordInput("Password"),new DialogInput.TextInput("SID"),new DialogInput.TextInput("Alias"),new DialogInput.TextArea("Notes")]),this.noteForms[Note.prototype.NOTE_TYPES.DRIVERS_LICENSE]=new p([new DialogInput.TextInput("Number"),new DialogInput.AlphaDateInput("Expiration Date"),new DialogInput.TextInput("License Class"),new DialogInput.TextInput("Name"),new DialogInput.TextInput("Address"),new DialogInput.TextInput("City / Town"),new DialogInput.TextInput("State"),new DialogInput.TextInput("ZIP / Postal Code"),new DialogInput.TextInput("Country"),new DialogInput.AlphaDateInput("Date of Birth"),new DialogInput.TextInput("Sex"),new DialogInput.TextInput("Height"),new DialogInput.TextArea("Notes")]),this.noteForms[Note.prototype.NOTE_TYPES.EMAIL]=new p([new DialogInput.TextInput("Username"),new DialogInput.PasswordInput("Password"),new DialogInput.TextInput("Server"),new DialogInput.TextInput("Port"),new DialogInput.TextInput("Type"),new DialogInput.TextInput("SMTP Server"),new DialogInput.TextInput("SMTP Port"),new DialogInput.TextArea("Notes")]),this.noteForms[Note.prototype.NOTE_TYPES.HEALTH_INSURANCE]=new p([new DialogInput.TextInput("Company"),new DialogInput.TextInput("Company Phone"),new DialogInput.TextInput("Policy Type"),new DialogInput.TextInput("Policy Number"),new DialogInput.TextInput("Group ID"),new DialogInput.TextInput("Member Name"),new DialogInput.TextInput("Member ID"),new DialogInput.TextInput("Physician Name"),new DialogInput.TextInput("Physician Phone"),new DialogInput.TextInput("Physician Address"),new DialogInput.TextInput("Co-pay"),new DialogInput.TextArea("Notes")]),this.noteForms[Note.prototype.NOTE_TYPES.IM]=new p([new DialogInput.TextInput("Type"),new DialogInput.TextInput("Username"),new DialogInput.PasswordInput("Password"),new DialogInput.TextInput("Server"),new DialogInput.TextInput("Port"),new DialogInput.TextArea("Notes")]),this.noteForms[Note.prototype.NOTE_TYPES.INSURANCE]=new p([new DialogInput.TextInput("Company"),new DialogInput.TextInput("Policy Type"),new DialogInput.TextInput("Policy Number"),new DialogInput.AlphaDateInput("Expiration"),new DialogInput.TextInput("Agent Name"),new DialogInput.TextInput("Agent Phone"),new DialogInput.TextInput("URL"),new DialogInput.TextArea("Notes")]),this.noteForms[Note.prototype.NOTE_TYPES.MEMBERSHIP]=new p([new DialogInput.TextInput("Organization"),new DialogInput.TextInput("Membership Number"),new DialogInput.TextInput("Member Name"),new DialogInput.AlphaDateInput("Start Date"),new DialogInput.AlphaDateInput("Expiration Date"),new DialogInput.TextInput("Website"),new DialogInput.TextInput("Telephone"),new DialogInput.PasswordInput("Password"),new DialogInput.TextArea("Notes")]),this.noteForms[Note.prototype.NOTE_TYPES.CREDIT]=new p([new DialogInput.TextInput("Name on Card"),new DialogInput.TextInput("Type"),new DialogInput.TextInput("Number"),new DialogInput.TextInput("Security Code"),new DialogInput.AlphaDateInput("Start Date",{includeDay:!1}),new DialogInput.AlphaDateInput("Expiration Date",{includeDay:!1}),new DialogInput.TextArea("Notes")]),this.noteForms[Note.prototype.NOTE_TYPES.SSN]=new p([new DialogInput.TextInput("Name"),new DialogInput.TextInput("Number"),new DialogInput.TextArea("Notes")]),this.noteForms[Note.prototype.NOTE_TYPES.SOFTWARE_LICENSE]=new p([new DialogInput.TextInput("License Key"),new DialogInput.TextInput("Licensee"),new DialogInput.TextInput("Version"),new DialogInput.TextInput("Publisher"),new DialogInput.TextInput("Support Email"),new DialogInput.TextInput("Website"),new DialogInput.TextInput("Price"),new DialogInput.AlphaDateInput("Purchase Date"),new DialogInput.TextInput("Order Number"),new DialogInput.TextInput("Number of Licenses"),new DialogInput.TextInput("Order Total"),new DialogInput.TextArea("Notes")]),this.noteForms[Note.prototype.NOTE_TYPES.SSH_KEY]=new p([new DialogInput.TextInput("Bit Strength"),new DialogInput.TextInput("Format"),new DialogInput.TextInput("Passphrase"),new DialogInput.TextArea("Private Key",void 0,"noResize",{inputButton:Strings.translateString("Copy"),inputButtonHandler:function(){this.dialog.vaultItem.copyPrivateKey()}}),new DialogInput.TextInput("Public Key"),new DialogInput.TextInput("Hostname"),new DialogInput.AlphaDateInput("Date"),new DialogInput.TextArea("Notes")]),this.noteForms[Note.prototype.NOTE_TYPES.WIFI]=new p([new DialogInput.TextInput("SSID"),new DialogInput.PasswordInput("Password"),new DialogInput.TextInput("Connection Type"),new DialogInput.TextInput("Connection Mode"),new DialogInput.TextInput("Authentication"),new DialogInput.TextInput("Encryption"),new DialogInput.TextInput("Use 802.1X"),new DialogInput.TextInput("FIPS Mode"),new DialogInput.TextInput("Key Type"),new DialogInput.TextInput("Protected"),new DialogInput.TextInput("Key Index"),new DialogInput.TextArea("Notes")]),this.noteForms[Note.prototype.NOTE_TYPES.SERVER]=new p([new DialogInput.TextInput("Hostname"),new DialogInput.TextInput("Username"),new DialogInput.PasswordInput("Password"),new DialogInput.TextArea("Notes")]),this.noteForms[Note.prototype.NOTE_TYPES.PASSPORT]=new p([new DialogInput.TextInput("Type"),new DialogInput.TextInput("Name"),new DialogInput.TextInput("Country"),new DialogInput.TextInput("Number"),new DialogInput.TextInput("Sex"),new DialogInput.TextInput("Nationality"),new DialogInput.TextInput("Issuing Authority"),new DialogInput.AlphaDateInput("Date of Birth"),new DialogInput.AlphaDateInput("Issued Date"),new DialogInput.AlphaDateInput("Expiration Date"),new DialogInput.TextArea("Notes")]),this.noteForms[Note.prototype.NOTE_TYPES.GENERIC]=new p([new DialogInput.TextArea("Notes",null)],["noteContent"])},NoteDialog.prototype.addAttachment=function(t){if(t){this.addedAttachments.push(t);var e=t.newDisplayObject();this.containers.attachments?this.containers.attachments.addChild(e):this.initializeAttachmentContainer([e])}},NoteDialog.prototype.setNoteFields=function(t){t=t||Note.prototype.NOTE_TYPES.GENERIC,LPTools.removeDOMChildren(this.noteFormElement);var e=this.noteForms[t];if(e){var n=!1;null===e.element&&(e.initialize(this),n=!0),this.noteFormElement.appendChild(e.element),this.noteFormElement.scrollTop=0,this.inputFields.extra=e.inputs,n&&this.adjustedView&&e.inputs.adjustView(),this.setNoteTypeImage(t)}},NoteDialog.prototype.add=function(t){(new Note).addFromDialog(t,this.getGroup(t),this.data.saveOptions)};var i=function(t,e){if(t){for(var n=[],o=0,i=t.length;o<i;++o)n.push(t[o]._data);n.length>0&&(e.add=n)}},a=function(t,e){if(t){for(var n=[],o=0,i=t.length;o<i;++o)n.push(t[o].getID());n.length>0&&(e.remove=n)}};NoteDialog.prototype.getData=function(){var t=DialogWithGroupInput.prototype.getData.apply(this,arguments);return(this.removedAttachments&&this.removedAttachments.length>0||this.addedAttachments&&this.addedAttachments.length>0)&&(t.attacharraychanges={},i(this.addedAttachments,t.attacharraychanges),a(this.removedAttachments,t.attacharraychanges)),t},NoteDialog.prototype.close=function(t){if(Dialog.prototype.close.apply(this,arguments)&&this.temporaryNoteTypeOptionValue){var e=this.temporaryNoteTypeOptionValue;this.inputFields.notetype.removeValue(this.temporaryNoteTypeOptionValue,Note.prototype.NOTE_TYPES.GENERIC),this.noteTypeOptions=this.noteTypeOptions.filter(function(t){return t.value!==e}),delete this.noteForms[e],this.temporaryNoteTypeOptionValue=null}};var p=function(t,e){if(this.inputs=new DialogInput.NestedFields,this.inputsArray=[],t instanceof Array){this.inputsArray=t;for(var n=0,o=t.length;n<o;++n){var i=t[n];this.inputs[i.field]=i}}this.element=null,this.$_element=null,this.additionalClasses=e};p.prototype.initialize=function(t){var e=["settings"];this.additionalClasses&&(e=e.concat(this.additionalClasses)),this.element=LPTools.createElement("table",e),this.$_element=$(this.element);for(var n=LPTools.createElement("tbody"),o=0,i=this.inputsArray.length;o<i;++o){var a=this.inputsArray[o],p=a.build();p.setAttribute("class","settingsRow"),n.appendChild(p),a.dialog=t}LPTools.addZebraStriping(n),this.element.appendChild(n),Strings.translate(this.element)}}(document);