#!/usr/bin/env bash

function gitt() {
	if [ -z "$1" ]; then
	echo "no commit message supplied"
	else
		git add -v -A
		git commit -m $1
		git push
	fi
}

function ghview() {
	local host=github.com
	local user=$1
	local repo=$2

	git clone --depth 1 --single-branch git@$host:$user/$repo /tmp/view/$host/$user/$repo
	nvim /tmp/view/github.com/$user/$repo

	rm -rf /tmp/view/$host/$user/$repo
}

function extract {
    if [ -z "$1" ]; then
    # display usage if no parameters given
		echo "Usage: extract <path/file_name>.<zip|rar|bz2|gz|tar|tbz2|tgz|Z|7z|xz|ex|tar.bz2|tar.gz|tar.xz>"
    else
		if [ -f $1 ] ; then
			NAME=${1%.*}
			mkdir $NAME && cd $NAME
			case $1 in
				*.tar.bz2)   tar xvjf ../$1    ;;
				*.tar.gz)    tar xvzf ../$1    ;;
				*.tar.xz)    tar xvJf ../$1    ;;
				*.lzma)      unlzma ../$1      ;;
				*.bz2)       bunzip2 ../$1     ;;
				*.rar)       unrar x -ad ../$1 ;;
				*.gz)        gunzip ../$1      ;;
				*.tar)       tar xvf ../$1     ;;
				*.tbz2)      tar xvjf ../$1    ;;
				*.tgz)       tar xvzf ../$1    ;;
				*.zip)       unzip ../$1       ;;
				*.Z)         uncompress ../$1  ;;
				*.7z)        7za e ../$1       ;;
				*.xz)        unxz ../$1        ;;
				*.exe)       cabextract ../$1  ;;
				*)           echo "extract: '$1' - unknown archive method" ;;
		esac
	else
		echo "$1 - file does not exist"
	fi
fi
}

function board {
    uname=pi
    ssh -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no $uname@$1
}

function sink {
    uname=pi
    ssh -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no $uname@$1 'sudo reboot'
}

function fixpitime {
    uname=pi
    ssh -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no $uname@$1 'date && sudo ntpdate tick.byu.edu && date'
}

function removeDeviceFromMonitoring {
   redis-cli -h shipwright-prd.xorre5.ng.0001.usw2.cache.amazonaws.com -p 6379 del $1
   curl -X POST -H "Content-Type: application/json" -d "{\"query\":{\"bool\":{\"filter\":[{\"wildcard\":{\"deviceID\": \"$1\"}}]}}}" "http://north.byu.edu:9200/oit-static-av-devices-v3/_delete_by_query"
}

function getTemp {
   ssh pi@$1 "/opt/vc/bin/vcgencmd \"measure_temp\""
}

function kubedash {
	echo "Open http://localhost:8001/api/v1/namespaces/kubernetes-dashboard/services/https:kubernetes-dashboard:/proxy"
	echo "Use this token for access:"
	kubectl -n kubernetes-dashboard describe secret $(kubectl -n kubernetes-dashboard get secret | grep admin-user | awk '{print $1}')
	echo "\n=============================="
	echo "Starting k8s proxy"
	kubectl proxy
}
